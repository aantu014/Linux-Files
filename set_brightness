##Get graphics card model.
gcm=$(ls /sys/class/backlight/)

echo "Your graphics card is $gcm"

sudo chmod 666 /sys/class/backlight/$gcm/brightness

##Allow users in the video group to change the brightness.
sudo rm /etc/udev/rules.d/backlight.rules
cat << EOF | sudo tee -a /etc/udev/rules.d/backlight.rules
ACTION=="add", SUBSYSTEM=="backlight", KERNEL=="$gcm", RUN+="/bin/chgrp video /sys/class/backlight/%k/brightness"
ACTION=="add", SUBSYSTEM=="backlight", KERNEL=="$gcm", RUN+="/bin/chmod g+w /sys/class/backlight/%k/brightness"
EOF

sudo usermod -aG video $USER  ##Add user to video group

mkdir /home/$USER/Scripts/

#Creates Script
cat <<EOF> /home/$USER/Scripts/brightness
#!/bin/bash
gcm=\$(ls /sys/class/backlight/)

lvl=\${1?Error: no value given}
int="^[0-9]+\$"

if ! [[ \$lvl =~ \$int ]] ; then
    echo "error: Not a number" >&2; exit 1
else
    echo \$lvl | tee /sys/class/backlight/\$gcm/brightness
fi
EOF

chmod +x /home/$USER/Scripts/brightness

### This will allow you to execute the file as a command called "bri"
cat <<EOF> /home/$USER/.bashrc
# /etc/skel/.bashrc
#
# This file is sourced by all *interactive* bash shells on startup,
# including some apparently interactive shells such as scp and rcp
# that can't tolerate any output.  So make sure this doesn't display
# anything or bad things will happen !


# Test for an interactive shell.  There is no need to set anything
# past this point for scp and rcp, and it's important to refrain from
# outputting anything in those cases.
if [[ \$- != *i* ]] ; then
        # Shell is non-interactive.  Be done now!
	return
fi

## term value may be different make sure to check and replace "x-terminal-emul" if necessary.
#If using arch change transset to transset-df

term="\$(cat /proc/\$PPID/comm)"
if [[ \$term = "x-terminal-emul" ]]; then
	transset "0.70" --id "\$WINDOWID"  >/dev/null
fi

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=2000
HISTFILESIZE=0

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color|*-256color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi
unset color_prompt force_color_prompt

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    #alias grep='grep --color=auto'
    #alias fgrep='fgrep --color=auto'
    #alias egrep='egrep --color=auto'
fi

# some more ls aliases
alias ll='ls -l'
alias la='ls -A'
alias l='ls -CF'

# Put your fun stuff here.
test -s ~/.alias && . ~/.alias || true

brightness="/home/$USER/Scripts/brightness"
alias bri="\$brightness"
EOF
# Remeber to reboot and enjoy ;)
