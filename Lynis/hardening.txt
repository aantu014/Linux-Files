###Default umask in /etc/profile or /etc/profile.d/custom.sh could be more strict 
if [ $UID -gt 199 ] && [ "`id -gn`" = "`id -un`" ]; then
    umask 027
else
    umask 027
fi

###Configure minimum & maximum encryption algorithm rounds in /etc/login.defs
SHA_CRYPT_MIN_ROUNDS 5000
SHA_CRYPT_MAX_ROUNDS 50000

###Disable drivers like USB storage and blacklist firewire-core
/etc/modprobe.d/blacklist.conf
blacklist usb-storage
blacklist firewire-core

###To decrease the impact of a full /tmp file system, place /tmp on a separated partition
systemctl enable tmp.mount	#check if enable "df -Ph /tmp"

###Consider running ARP monitoring software
sudo yum install arpwatch
sudo vi /etc/sysconfig/arpwatch #change email if neccessary
sudo systemctl enable arpwatch
sudo systemctl start arpwatch

###Consider hardening SSH configuration "sudo vi /etc/ssh/sshd_config"
Port 2222 ##change to diff number
LogLevel VERBOSE
PermitRootLogin no
MaxAuthTries 2
MaxSessions 2
AllowAgentForwarding no
AllowTcpForwarding no
X11Forwarding no
Compression no
TCPKeepAlive no
ClientAliveCountMax 2
UseDNS no

$ sudo firewall-cmd --permanent --zone=public --add-port=2222/tcp
$ sudo firewall-cmd --reload


# "sudo sshd -T" to confirm settings
sudo systemctl restart sshd

###Add a legal banner to /etc/issue and /etc/issue.net, to warn unauthorized users

cat /etc/issue

********************************************************************
*                                                                  *
* This system is for the use of authorized users only.  Usage of   *
* this system may be monitored and recorded by system personnel.   *
*                                                                  *
* Anyone using this system expressly consents to such monitoring   *
* and is advised that if such monitoring reveals possible          *
* evidence of criminal activity, system personnel may provide the  *
* evidence from such monitoring to law enforcement officials.      *
*                                                                  *
********************************************************************

###Enable process accounting
sudo yum install psacct
sudo systemctl enable psacct.service
sudo systemctl start psacct.service
#"ac -p" get system info

###One or more sysctl values differ from the scan profile and could be tweaked 

sudo sysctl -a > /tmp/sysctl-defaults.conf

sudo vi /etc/sysctl.d/80-lynis.conf
kernel.core_uses_pid = 1
kernel.dmesg_restrict = 1
kernel.kptr_restrict = 2
kernel.sysrq = 0
kernel.yama.ptrace_scope = 3
net.ipv4.conf.all.accept_redirects = 0
net.ipv4.conf.all.log_martians = 1
net.ipv4.conf.all.rp_filter = 1
net.ipv4.conf.all.send_redirects = 0
net.ipv4.conf.default.accept_source_route = 0
net.ipv4.conf.default.accept_redirects = 0
net.ipv4.conf.default.log_martians = 1
net.ipv4.tcp_timestamps = 0
net.ipv6.conf.all.accept_redirects = 0
net.ipv6.conf.default.accept_redirects = 0

#Then apply
sudo sysctl --system

###Harden compilers like restricting access to root user only
sudo chmod o-rx /usr/bin/gcc
sudo chmod o-rx /usr/bin/as


###Check CUPS configuration if it really needs to listen on the network.
###Disable CUPS if your not using a printer.
sudo systemctl stop cups
sudo systemctl disable cups

###Check iptables rules to see which rules are currently not used
#use iptables –list –numeric –verbose to display all rules. Check for rules which didn’t get a hit and repeat this process several times 
#(e.g. in a few weeks). Finally remove any unneeded rules.”

iptables -L -n -v



###Check DNS configuration for the dns domain name
vi /etc/hostname
centos.localdomain

vi /etc/hosts
127.0.0.1	 localhost
::1		 localhost
127.0.1.1	 centos.localdomain		centos

###Determine if protocol 'dccp' 'sctp' 'rds' 'tipc' is really needed on this system.

vim /etc/modprobe.d/blacklist.conf

install dccp /bin/true
install sctp /bin/true
install rds /bin/true
install tipc /bin/true

###Copy /etc/fail2ban/jail.conf to jail.local to prevent it being changed by updates

cp /etc/fail2ban/jail.conf /etc/fail2ban/jail.local

###Set a password on GRUB boot loader to prevent altering boot configuration (e.g. boot in single user mode without password)

This proccess might be different depening on distro so google it


###If not required, consider explicit disabling of core dump in /etc/security/limits.conf file

vim /etc/security/limits.conf

*	hard	core	0
*	soft	core	0

###Check 143 files in /tmp which are older than 90 days

vim /etc/profile

##Add this

### Specify in days the age of files to target for cleanup ###
FILE_AGE=15
 
find /tmp -mtime +${FILE_AGE} -type f -exec rm -f {} \;
find /tmp -type d -empty -delete


###Consider restricting file permissions
sudo chmod og-rwx /etc/cron.*
sudo chmod 600 /etc/crontab

###Double check the permissions of home directories as some might be not strict enough.

chmod 750 /home/user


###Enable auditd to collect audit information.
sudo apt install auditd
sudo systemctl start auditd
sudo systemctl enable auditd

###Enable sysstat to collect accounting
sudo apt install sysstat
sudo systemctl start sysstat
sudo systemctl enable sysstat

sudo apt install acct
sudo systemctl start acct
sudo systemctl enable acct

###Determine if automation tools are present for system management
sudo apt install ansible


###Install a file integrity tool to monitor changes to critical and sensitive files
yum install aide

###No AIDE database was found, needed for AIDE functionality
sudo aide --init
sudo mv /var/lib/aide/aide.db.new.gz /var/lib/aide/aide.db.gz
sudo aide --check
aide --update //used after update or change and rename aide.db

#If on debian apt install aide-common
aideinit

                                ###Additional hardening####
#Disabling unused filesystems
vim /etc/modprobe.d/blacklist.conf

install cramfs /bin/true
install freevxfs /bin/true
install jffs2 /bin/true
install hfs /bin/true
install hfsplus /bin/true
install udf /bin/true

###Additional process hardening
sudo vim /etc/sysctl.conf
    
    fs.suid_dumpable=0  #Restrict Core Dumps
    kernel.exec-shield=1 #Configure Exec Shield
    kernel.randomize_va_space=2 #Enable randomized Virtual Memory Region Placement

/tmp nodev nosuid
/var/tmp nodev nosuid noexec
/home nodev
/dev/shm nodev nosuid noexec

#Disable automounting
systemctl disable autofs
systemctl disable udisks2



#Found promiscuous interface
#Warning this will disable promiscuous which is used by nmap,tcpdump, an IDS, or some other software component
arpwatch -p

#All jails in Fail2ban are disabled
vi /etc/fail2ban/jail.local
[DEFAULT]
enabled = true

###Enable SELinux
sudo vim /etc/selinux/config
SELINUX=enforcing

###Not allow users to reuse the last four passwords
sudo vim /etc/pam.d/common-password

    auth        sufficient    pam_unix.so likeauth nullok
    password 	sufficient	 pam_unix.so remember=4 
   
###Enforce is strong passwords
sudo vim /etc/pam.d/system-auth
    
    /lib/security/$ISA/pam_cracklib.so retry=3 minlen=8 lcredit=-1 ucredit=-2 dcredit=-2 ocredit=-1

###Lock the account after five failed attempts
    auth required pam_env.so 
    auth required pam_faillock.so preauth audit silent deny=5 unlock_time=604800 
    auth [success=1 default=bad] pam_unix.so 
    auth [default=die] pam_faillock.so authfail audit deny=5 unlock_time=604800 
    auth sufficient pam_faillock.so authsucc audit deny=5 unlock_time=604800 
    auth required pam_deny.so
    
sudo vim /etc/pam.d/system-auth
    auth required pam_env.so 
    auth required pam_faillock.so preauth audit silent deny=5 unlock_time=604800 
    auth [success=1 default=bad] pam_unix.so 
    auth [default=die] pam_faillock.so authfail audit deny=5 unlock_time=604800 
    auth sufficient pam_faillock.so authsucc audit deny=5 unlock_time=604800 
    auth required pam_deny.so
    
###Password error after five times, only the administrator can unlock the account, unlock the command as follows:
# /usr/sbin/faillock –user <userlocked> –reset

### set the “password 90 days after the expiration.”
chage –maxdays 90 <user>

###Restrict access to the su 
auth required pam_wheel.so use_uid

###Disable the system accounts for non-root users by using the following bash script:

#!/bin/bash 
for user in `awk -F: '($3 < 500) {print $1 }' /etc/passwd`; do
if [ $user != "root" ] 
then 
/usr/sbin/usermod -L $user 
if [ $user != "sync" ] && [ $user != "shutdown" ] && [ $user != "halt" ] 
then /usr/sbin/usermod -s /sbin/nologin $user 
fi 
fi 
done


#Install Apache mod_evasive to guard webserver against DoS/brute force attempts [HTTP-6640]
#Install Apache modsecurity to guard webserver against web application attacks [HTTP-6643] 
